import java.util.InputMismatchException;
import java.util.Scanner;
import java.util.HashMap;


public class Menu {

    Admin a1;
    Beneficiary b1;
    Beneficiary b2;
    Donator d1;

    HashMap<String, Donator> donList;
    HashMap<String, Beneficiary> benList;

    String telephone; //To thlefwno pou tha eisagei kathe xrhsths

    Organization o = new Organization(); //To onoma tou organismou

    Offers of = new Offers(); //Dwrees
    Requests r=new Requests();//Aithmata
    RequestDonation rdon=new RequestDonation();

    public Menu(Organization o) {

        this.o = o;


        a1 = new Admin("Kwnstantinos", "6986742516");
        b1 = new Beneficiary("Pasxalis", "6981126983");
        b2 = new Beneficiary("Xristos", "6987512458", 3);
        d1 = new Donator("Giwrgos", "6924572357");


        donList = new HashMap<>();
        benList = new HashMap<>();


        donList.put("6924572357", d1);
        benList.put("6981126983", b1);
        benList.put("6987512458", b2);
    }

    public void getMenu() {
        //Diadikasia anagnwrishs melwn tou susthmatos

        try (Scanner sc = new Scanner(System.in);) {
            System.out.println("Welcome to our Donate and Volunteer System");
            System.out.println("--------------------------------------------------");

            while (true) {
                System.out.println("Please enter your phone number: ");
                if (sc.hasNextLong()) {
                    telephone = sc.nextLine();
                    break;
                } else {
                    System.out.println("Invalid Phone number! Please try again: ");
                    sc.nextLine();
                }
            }
            Offers rdl = new Offers(); //List from donator

            int choice = 0;
            {

                //Anagnwrish tou Admin tou organismou

                if (a1.getTelephone().equalsIgnoreCase(telephone)) {
                    {
                        System.out.println("You are an Admin!");
                        System.out.println("Welcome! \n\n");
                        do {

                            System.out.println("-----------------------------------");
                            String Menu = ("Choose an option: \n"
                                    + "[1] View\n"
                                    + "[2] Monitor Organization\n"
                                    + "[3] Back\n"
                                    + "[4] Logout\n"
                                    + "[5] Exit\n");
                            System.out.println(Menu);
                            System.out.println("-----------------------------------");
                            boolean validChoice = true; //Gia thn epikurwsh swsths epiloghs tou xrhsth
                            boolean limitChoice; //choice= 1-5

                            do {
                                validChoice = false;
                                try {
                                    choice = sc.nextInt();
                                    do {
                                        limitChoice = false;
                                        switch (choice) {

                                            //Analush twn paroxwn
                                            case 1:
                                                System.out.println("case 1.");
                                                System.out.println("1. Material");
                                                System.out.println("2. Services");

                                                choice = sc.nextInt();


                                                switch (choice) {
                                                    //Material
                                                    case 1:

                                                        for (RequestDonation rd : o.getCurrentDonations().getList()) {
                                                            Entity en = rd.getEntity();
                                                            if (en instanceof Material) {
                                                                RequestDonation rd1 = new RequestDonation(en, 0);
                                                                System.out.println(en.getName() + " " + rd.getQuantity());

                                                                rdl.add(rd1, o);

                                                            }
                                                        }

                                                        break;
                                                    //Service
                                                    case 2:


                                                        for (RequestDonation rd : o.getCurrentDonations().getList()) {
                                                            Entity en = rd.getEntity();
                                                            if (en instanceof Service) {
                                                                System.out.println(en.getName() + " " + rd.getQuantity());

                                                            }
                                                        }
                                                        break;

                                                    default:
                                                        System.out.println("Wrong Choice! Please try again.");
                                                        getMenu();

                                                }
                                                break;

                                            //Monitor Organization
                                            case 2:

                                                System.out.println("case 2.");
                                                System.out.println("1.List of Beneciaries" + "\n" + "2.List of Donators" + "\n" + "Make a choice");
                                                choice = sc.nextInt();

                                                switch (choice) {
                                                    //Beneficiaries
                                                    case 1:
                                                        System.out.println("All the beneficiaries are: ");
                                                        o.listBeneficiaries();

                                                        System.out.println("Do you wish to delete a beneficiary?"+"(yes/no)");
                                                        if(sc.hasNext());

                                                        String answer1=sc.next();

                                                        if(answer1.trim().toLowerCase().equals("yes"))
                                                        {
                                                            System.out.println("Chose based on the position of the beneficiary: ");

                                                            choice=sc.nextInt();
                                                            o.removeBeneficiary(choice - 1);
                                                        }

                                                        break;
                                                    //Donators
                                                    case 2:
                                                        System.out.println("All donators are:");
                                                        o.listDonators();

                                                        System.out.println("Do you wish to delete a donator?"+"(yes/no)");
                                                        if(sc.hasNext());

                                                        String answer2=sc.next();

                                                        if(answer2.trim().toLowerCase().equals("yes")){

                                                            System.out.println("Chose based on the position of the donator: ");
                                                            choice=sc.nextInt();
                                                            o.removeDonator(choice - 1);
                                                        }

                                                        break;
                                                }
                                                break;

                                            case 3:
                                                getMenu(); //Epistrofh sthn arxikh selida tou organismou
                                                break;
                                            case 4:
                                                logout(); //Aposundesh tou xrhsth
                                                break;
                                            case 5:
                                                exit(); //Eksodos apo to susthma
                                                break;

                                            default:
                                                validChoice = false;
                                                limitChoice = true;
                                                System.out.println("Try a valid choice(1-6).");
                                                choice = sc.nextInt();

                                        }
                                    } while (limitChoice);

                                } catch (InputMismatchException ime) {
                                    validChoice = true;
                                    System.out.println("Please enter only numbers.");
                                    sc.nextLine();
                                }
                            } while (validChoice);

                        }while(choice!=6);
                    }
                }

                //Anagnwrish dwrhtwn susthmatos

                else if (donList.containsKey(telephone)) {

                    System.out.println("You are a donator.");
                    System.out.println("Welcome! \n\n");
                    do{
                        System.out.println("-----------------------------------");
                        String Menu = ("Choose an optiona: \n"
                                + "[1] Add Offer\n"
                                + "[2] Show Offer\n"
                                + "[3] Commit\n"
                                + "[4] Back\n"
                                + "[5] Logout\n"
                                + "[6] Exit");

                        System.out.println(Menu);
                        System.out.println("-----------------------------------");
                        boolean validChoice = true; //Gia thn epikurwsh swsths epiloghs tou xrhsth
                        boolean limitChoice; //choice: 1-6

                        do {
                            validChoice = false;

                            try {
                                choice = sc.nextInt();
                                do {
                                    limitChoice = false;
                                    switch (choice) {

                                        //Add Offer
                                        case 1:
                                            System.out.println("case 1.");
                                            System.out.println("1. Material");
                                            System.out.println("2. Services");

                                            choice = sc.nextInt();


                                            switch (choice) {
                                                case 1:
                                                    //Material
                                                    for (RequestDonation rd : o.getCurrentDonations().getList()) {
                                                        Entity en = rd.getEntity();
                                                        if (en instanceof Material) {
                                                            RequestDonation rd1 = new RequestDonation(en, 0);
                                                            System.out.println(en.getName() + " " + rd.getQuantity());

                                                            rdl.add(rd1, o);

                                                        }
                                                    }

                                                    System.out.println("How much quantity do you wish to add to each");

                                                    for (RequestDonation rd : rdl.getList()) {
                                                        Entity en = rd.getEntity();
                                                        if (en instanceof Material) {
                                                            choice = sc.nextInt();
                                                            rd.setQuantity(rd.getQuantity() + choice);

                                                        }
                                                    }

                                                    break;

                                                case 2:
                                                    //Service
                                                    for (RequestDonation rd : o.getCurrentDonations().getList()) {
                                                        Entity en = rd.getEntity();
                                                        if (en instanceof Service) {
                                                            System.out.println(en.getName() + " " + rd.getQuantity());

                                                            rdl.add(rd, o);

                                                        }
                                                    }

                                                    System.out.println("Which service you wish to offer");

                                                    for (RequestDonation rd : rdl.getList()) {
                                                        Entity en = rd.getEntity();

                                                        if (en instanceof Service) {
                                                            choice = sc.nextInt();
                                                            rd.setQuantity(rd.getQuantity() + choice);

                                                        }
                                                    }

                                                    break;


                                                default:
                                                    System.out.println("Wrong choice. Try again:");
                                                    getMenu();


                                            }
                                            donList.get(telephone).addOffer(of);
                                            break;

                                        //Show Offers
                                        case 2:
                                            System.out.println("case 2.");
                                            int l = 1; //Metrhths gia thn aparithmhsh twn paroxwn
                                            for (RequestDonation rd : rdl.getList()) {

                                                if (rdl.getList() == null) {
                                                    System.out.println("The list is empty. Please make a donation");
                                                }
                                                else {
                                                    Entity en = rd.getEntity();
                                                    System.out.println(l + ". " + en.getName() + " " + rd.getQuantity());
                                                    l++;
                                                }
                                            }

                                            System.out.println("---------------------------------");
                                            System.out.println("1.Pick a donation");
                                            System.out.println("2.Clear all donations");
                                            System.out.println("3.Commit");
                                            System.out.println("---------------------------------");

                                            System.out.println("Make a choice:");

                                            choice = sc.nextInt();
                                            switch (choice) {

                                                //Epilogh Paroxhs
                                                case 1:
                                                    System.out.println("What do you wish to do?");

                                                    System.out.println("1.Delete donation");
                                                    System.out.println("2.Process donation");
                                                    System.out.println("---------------------------------");

                                                    choice = sc.nextInt();
                                                    System.out.println("Make a choice");

                                                    switch (choice) {
                                                        //Diagrafh Paroxhs
                                                        case 1:
                                                            System.out.println("Select based on the position of the provision, which one do you wish to delete");
                                                            choice = sc.nextInt();

                                                            rdl.remove(choice - 1);

                                                            break;
                                                        //Epeksergasia Paroxhs
                                                        case 2:
                                                            System.out.println("Select based on the position of the provision, which one do you wish to process");
                                                            choice = sc.nextInt();
                                                            System.out.println("Now pick a new quantity");
                                                            int quan = sc.nextInt();

                                                            rdl.modify(choice - 1, quan); //Tropopoihsh ths timhs

                                                            break;

                                                        default:
                                                            System.out.println("Wrong choice.Please try again.");
                                                            getMenu();

                                                    }
                                                    break;

                                                //Katharismos twn paroxwn
                                                case 2:
                                                    donList.get(telephone).reset();
                                                    break;

                                                //Oloklhrwsh Paroxwn
                                                case 3:
                                                    donList.get(telephone).commitOffers(o);
                                                    System.out.println("Completion of donation");
                                                    break;

                                                default:
                                                    System.out.println("Wrong choice. Please try again.");
                                                    getMenu();
                                            }
                                            break;

                                        //Commit
                                        case 3:
                                            int i = 0;
                                            for (RequestDonation rd : rdl.getList()) {

                                                o.getCurrentDonations().modify(i, rd.getQuantity() + o.getCurrentDonations().getWithIndex(i).getQuantity());
                                                i++;
                                            }

                                            System.out.println("Completion of donation");
                                            break;

                                        case 4:
                                            System.out.println("case 4.");
                                            getMenu(); //Epistorfh sthn arxikh selida tou susthmatos
                                            break;
                                        case 5:
                                            logout(); //Aposundesh tou xrhsth apo to susthma
                                            break;
                                        case 6:
                                            exit(); //Eksodos apo to susthma
                                            break;
                                        default:
                                            validChoice = false;
                                            limitChoice = true;

                                    }
                                } while (limitChoice);

                            } catch (InputMismatchException ime) {
                                validChoice = true;
                                System.out.println("Please enter only numbers.");
                                sc.nextLine();
                            }
                        } while (validChoice);

                    }while(choice!=6);
                }

                //Anagnwrish twn Epwfeloumenwn tou susthmatos

                else if (benList.containsKey(telephone)) {

                    System.out.println("You are a beneficiary.");
                    System.out.println("Welcome! \n\n");

                    do {
                        System.out.println("-----------------------------------");
                        String mainMenu = ("Choose an option: \n"
                                + "[1] Add Request\n"
                                + "[2] Show Requests\n"
                                + "[3] Commit\n"
                                + "[4] Back\n"
                                + "[5] Logout\n"
                                + "[6] Exit");

                        System.out.println(mainMenu);
                        System.out.println("-----------------------------------");
                        boolean validChoice = true;
                        boolean limitChoice;

                        do {
                            validChoice = false;

                            try {
                                choice = sc.nextInt();
                                do {
                                    limitChoice = false;
                                    switch (choice) {
                                        //Add Request
                                        case 1:
                                            System.out.println("case 1.");
                                            System.out.println("1. Material");
                                            System.out.println("2. Services");

                                            choice = sc.nextInt();

                                            switch (choice) {
                                                //Material
                                                case 1:

                                                    for (RequestDonation rd : o.getCurrentDonations().getList()) {
                                                        Entity en = rd.getEntity();

                                                        if (en instanceof Material) {
                                                            RequestDonation rd1 = new RequestDonation(en, 0);
                                                            System.out.println(en.getName() + " " + rd.getQuantity());

                                                            rdl.add(rd1, o);

                                                        }
                                                    }

                                                    System.out.println("How much do you wish to receive from each?");

                                                    for (RequestDonation rd : rdl.getList()) {
                                                        Entity en = rd.getEntity();

                                                        if (en instanceof Material) {
                                                            choice = sc.nextInt();
                                                            rd.setQuantity(rd.getQuantity() + choice);

                                                        }
                                                    }
                                                    break;

                                                //Service
                                                case 2:

                                                    for (RequestDonation rd : o.getCurrentDonations().getList()) {
                                                        Entity en = rd.getEntity();
                                                        if (en instanceof Service) {
                                                            System.out.println(en.getName() + " " + rd.getQuantity());

                                                            rdl.add(rd, o);

                                                        }
                                                    }

                                                    System.out.println("How much do you wish to receive from each?");
                                                    if(sc.hasNext());

                                                    for (RequestDonation rd : rdl.getList()) {
                                                        Entity en = rd.getEntity();

                                                        if (en instanceof Service) {
                                                            choice = sc.nextInt();
                                                            rd.setQuantity(rd.getQuantity() +choice);

                                                        }
                                                    }
                                                    break;

                                                default:
                                                    System.out.println("Wrong choice. Please try again:");
                                                    getMenu();


                                            }
                                            benList.get(telephone).addRequests(r);
                                            break;

                                        //Show Requests
                                        case 2:

                                            System.out.println("case 2.");
                                            for (RequestDonation rd : rdl.getList()) {
                                                Entity en = rd.getEntity();
                                                System.out.println(en.getName() + " " + rd.getQuantity());

                                            }

                                            System.out.println("---------------------------------");
                                            System.out.println("1.Pick a donation");
                                            System.out.println("2.Clean all donations");
                                            System.out.println("3.Commit");
                                            System.out.println("---------------------------------");

                                            System.out.println("Make a choice:");

                                            choice = sc.nextInt();
                                            switch (choice) {

                                                //Epilogh Paroxhs
                                                case 1:
                                                    System.out.println("What do you wish to do?");

                                                    System.out.println("1.Delete donation");
                                                    System.out.println("2.Process donation");
                                                    System.out.println("---------------------------------");

                                                    choice = sc.nextInt();
                                                    System.out.println("Make a choice");

                                                    switch (choice) {
                                                        //Diagrafh
                                                        case 1:
                                                            System.out.println("Select based on the position of the donation, which one do you wish to delete");
                                                            choice = sc.nextInt();

                                                            rdl.remove(choice - 1);

                                                            break;
                                                        //Edit
                                                        case 2:
                                                            System.out.println("Select based on the position of the donation, which one do you wish to process");
                                                            choice = sc.nextInt();

                                                            System.out.println("Now pick a new quantity");
                                                            double quan = sc.nextDouble();

                                                            rdl.modify(choice - 1, quan); //Tropopoihsh ths timhs

                                                            break;


                                                        default:
                                                            System.out.println("Wrong choice. Please try again.");
                                                            getMenu();

                                                    }
                                                    break;

                                                //Katharismos Paroxwn
                                                case 2:
                                                    benList.get(telephone).reset();
                                                    break;

                                                //Commit
                                                case 3:

                                                    benList.get(telephone).commitRequest(rdl,o);
                                                    break;

                                                default:
                                                    System.out.println("Wrong choice. Please try again.");
                                                    getMenu();
                                            }
                                            break;

                                        //Commit
                                        case 3:


                                            benList.get(telephone).commitRequest(rdl, o);

                                            break;
                                        case 4:
                                            System.out.println("case 4.");
                                            getMenu(); //Epistrofh sthn arxikh selida tou susthmatos
                                            break;
                                        case 5:
                                            logout(); //Aposundesh tou xrhsth apo to susthma
                                            break;
                                        case 6:
                                            exit(); //Eksodos apo to susthma
                                            break;
                                        default:
                                            validChoice = false;
                                            limitChoice = true;
                                            System.out.println("Pick a valid option(1-6).");
                                            choice = sc.nextInt();

                                    }
                                } while (limitChoice);

                            } catch (InputMismatchException ime) {
                                validChoice = true;
                                System.out.println("Please enter only numbers.");
                                sc.nextLine();
                            }

                        } while (validChoice);

                    } while(choice!=6);

                }

                //Dhmiourgia neou xrhsth tou susthmatos
                else
                    NewUser();

            }
        }
    }


    //Methodos gia thn aposundesh tou xrhsth apo to susthma
    public void logout(){
        Scanner log= new Scanner(System.in);
        String s;
        boolean validChoice;

        validChoice=true;
        System.out.println("You have been logged out.Do you wish to log in again?(yes/no)");
        s = log.next();

        if (s.trim().toLowerCase().equals("yes")) {
            getMenu(); //yes
        }
        else {
            System.out.println("Thank you for your participation.");
            System.exit(0); //no
        }

    }

    //Methodos gia thn eksodo tou xrhsth apo to susthma
    public void exit(){
        System.out.println("Thank you for your participation.");
        System.exit(0);
    }

    //Dhmiourgia neou xrhsth sto susthma
    public void NewUser() {

        try (Scanner sc = new Scanner(System.in))
        {
            while (true) {

                System.out.println("You are not registered in our system.Do you wish to register as a Donator or as a Beneficiary?");

                String ans = sc.next(); //answer: Donator or Beneficiary

                if (ans.trim().toLowerCase().equals("donator"))
                {
                    System.out.println("Enter your name:");
                    sc.nextLine();
                    String s1 = sc.nextLine();
                    d1.setName(s1);
                    while (true) {
                        System.out.println("Enter your phone number:");
                        if (sc.hasNextLong()) {
                            String s2 = (sc.next());
                            d1.setTelephone(s2);
                            break;
                        }
                        else {
                            System.out.println("Please type a valid phone number!Try again:");
                            sc.nextLine();
                        }
                    }
                    System.out.println("Congratulations you are a new donator:  \n " +"Name: " +d1.getName() +" "+"Telephone: " + d1.getTelephone());
                    o.insertDonator(d1);
                    donList.put(d1.getTelephone(), d1);
                    System.out.println("----------------------------");
                    System.out.println("All donators are: ");
                    o.listDonators();

                    getMenu(); //Dunatothta o neos xrhsths na summetasxei sto susthma dwrewn
                    if(sc.hasNext())
                        break;
                }


                else if (ans.trim().toLowerCase().equals("beneficiary"))
                {
                    System.out.println("Enter your name: ");
                    sc.nextLine();
                    String s3 = sc.nextLine();
                    b1.setName(s3);

                    while (true) {
                        System.out.println("Enter your phone number: ");
                        if (sc.hasNextLong()) {
                            String s4 = (sc.next());
                            b1.setTelephone(s4);
                            break;
                        }
                        else {
                            System.out.println("Please type a valid phone number!Try again:");
                            sc.nextLine();
                        }
                    }
                    System.out.println("Congratulations you are beneficiary: \n " +"Name: "+ b1.getName() + " " +"Telephone: "+ b1.getTelephone());
                    o.insertBeneficiary(b1);
                    benList.put(b1.getTelephone(), b1);

                    System.out.println("----------------------------");
                    System.out.println("All beneficiaries are: ");
                    o.listBeneficiaries();

                    getMenu(); //Dunatothta o neos xrhsths na summetasxei sto susthma dwrewn
                    if(sc.hasNext())
                        break;

                }
                else {
                    System.out.println("Unfortunately your registration wasn't valid. Please try again.");
                }
            }
        }
    }
}
